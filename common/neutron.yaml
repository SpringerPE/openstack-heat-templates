heat_template_version: 2013-05-23

description: >
  HOT template to create a new neutron network plus a router to the public network


parameters:

  project:
    label: Project name
    type: string
    description: Name of the project

  private_net_cidr:
    type: string
    description: Private network address (CIDR notation)
    default: 10.0.0.0/24
    
  private_net_gateway:
    type: string
    description: Private network gateway address
    default: 10.0.0.1
    
  private_net_pool_start:
    type: string
    description: Start of private network IP address allocation pool\
    default: 10.0.0.10
    
  private_net_pool_end:
    type: string
    description: End of private network IP address allocation pool
    default: 10.0.0.255

  private_net_nameservers:
    type: comma_delimited_list
    description: List of DNS servers
    default: 8.8.8.8


resources:

  private_net:
    type: OS::Neutron::Net
    properties:
      admin_state_up: true
      shared: true
      name:
         str_replace:
            template: $name-net
            params:
               $name: { get_param: project }

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      enable_dhcp: true
      network_id: { get_resource: private_net }
      cidr: { get_param: private_net_cidr }
      gateway_ip: { get_param: private_net_gateway }
      dns_nameservers: { get_param: private_net_nameservers }
      allocation_pools:
        - start: { get_param: private_net_pool_start }
          end: { get_param: private_net_pool_end }
      name:
         str_replace:
            template: $name-subnet
            params:
               $name: { get_param: project }

  router:
    type: OS::Neutron::Router
    properties:
      admin_state_up: true
      distributed: false
      ha: true
      external_gateway_info:
        network: { get_param: public_net }
      name:
         str_replace:
            template: $name-subnet-router
            params:
               $name: { get_param: project }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: private_subnet }

